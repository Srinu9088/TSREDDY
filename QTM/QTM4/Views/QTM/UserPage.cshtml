@model QTM4.Models.EmployeeTaskModel
@{
    ViewBag.Title = "UserPage";
    Layout = "~/Views/Shared/_User.cshtml";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<style>
    .dis li {
        float: left;
        padding: 35px;
    }

    .dis {
        list-style-type: none;
        display: none;
        padding-left: 10px;
    }

    .EditSave {
        display: none;
    }

    @@keyframes color_animation {
        0% {
            background-color: blue;
        }

        50% {
            background-color: green;
        }

        100% {
            background-color: deepskyblue;
        }
    }

    .animate_color {
        animation: color_animation 1s infinite ease;
    }
</style>
<h4 style="text-align:right;padding-right:30px;color:blueviolet">Hello, Welcome @Session["Lname"].ToString()  @Session["Fname"].ToString()</h4>
<button class="btn btn-success container" style="margin-left:120px;margin-top:20px" id="btnAdd"><i class="glyphicon glyphicon-plus-sign"></i>Add Task</button><br />
<div class="container" style="text-align:center;margin-top:30px">
    <form id="etasks" style="display:none">
        <div class="col-md-2">
            @Html.EditorFor(model => model.TaskDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Pick Date", id = "datePick" } })
            @Html.ValidationMessageFor(model => model.TaskDate, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.EditorFor(model => model.Task, new { htmlAttributes = new { @class = "form-control", placeholder = "Task Description" } })
            @Html.ValidationMessageFor(model => model.Task, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            @Html.EditorFor(model => model.Type_Of_Task, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Of Task" } })
            @Html.ValidationMessageFor(model => model.Type_Of_Task, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-1">
            <input id="submitBtn" type="button" value="Submit" class="btn btn-primary" />
        </div>
    </form>
</div>


<div class="container" id="radio" style="display:none;padding-left:260px">
    <button href="#" id="TaskReg" class="btn btn-primary" style="margin-left:100px;margin-top:-60px"><i class="glyphicon glyphicon-circle-arrow-left"></i>Back</button>
    <div class="col-md-4">
        <label style="font-size:16pt"><input type="radio" id="specific" value="Specific" name="Search" />Specific(Date)</label>
    </div>
    <div class="col-md-4">
        <label style="font-size:16pt"><input type="radio" id="between" value="Between" name="Search" />Between(Dates)</label>
    </div>
</div>
<div style="display:none;text-align:center;padding-left:200px" id="ser1" class="container">
    <div class="col-md-4">
        @Html.EditorFor(model => model.TaskDate, new { htmlAttributes = new { @class = "form-control", placeholder = "From Date", id = "datePick1" } })
    </div>

    <div class="col-md-4">
        @Html.EditorFor(model => model.TaskDate, new { htmlAttributes = new { @class = "form-control", placeholder = "To Date", id = "datePick2" } })
    </div>

    <div class="col-md-1">
        <input id="BetweenSearch" type="button" value="Search" class="btn btn-primary" />
    </div>
</div>

<div class="container" style="text-align:center;display:none;padding-left:270px" id="ser2">
    <form>
        <div class="col-md-4">
            @Html.EditorFor(model => model.TaskDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Pick Date", id = "PdatePick" } })
        </div>

        <div class="col-md-2">
            <input id="ParticularSearch" type="button" value="Search" class="btn btn-primary" />
        </div>
    </form>
</div>
<div class="container tasklist" style="text-align:center">
    

</div>


<script>
    $(document).ready(function () {

        var TaskListMethod = function () {
            $.ajax({
                type: "Get",
                url: "/QTM/Tasks",
                success: function (response) {
                    if (response != "" || response != null) {

                        $(".taskList").empty();
                        $(".taskList").append(response);
                    }
                }

            })
        }
        TaskListMethod();
        $("#submitBtn").click(function () {

            var data = $("#etasks").serialize();
            var TaskDate = $("#datePick").val();
            var Task = $("#Task").val();
            var Type_Of_Task = $("#Type_Of_Task").val();
            if (TaskDate == "" || TaskDate == undefined) {
                alert("Please pick the date");
                return false;
            }
            if (Task == "" || Task == undefined) {
                alert("Please Enter Task Description");
                return false;
            }
            if (Type_Of_Task == "" || Type_Of_Task == undefined) {
                alert("Please Enter Type Of Task");
                return false;
            }
            $.ajax({
                type: "POST",
                url: "/QTM/List",
                data: data,
                success: function (response) {
                    if (response == "yes") {
                        alert("Submitted Successfully");
                        $("#etasks input[type=text]").val('');
                        TaskListMethod();
                    }
                }
            })
        })
    })

</script>

<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />


<script>

    $().ready(function () {
        $("#datePick").datepicker();

    })

    $().ready(function () {
        $("#PdatePick").datepicker();
    }
    )

    $().ready(function () {
        $("#datePick1").datepicker();
    }
    )

    $().ready(function () {
        $("#datePick2").datepicker();
    }
    )

    $("#btnAdd").click(function () {
        $("#etasks").toggle();
        $("#radio").hide();
        $("#ser2").hide();
        $("#ser1").hide();

    })   


    $("#TaskReg").click(function () {
        //$("#etasks").show();
        window.location.href = "UserPage";
        //$("#radio").hide();
        // $("#ser1").hide();
        //$("#ser2").hide();
    })

    $("#BetweenSearch").click(function () {

        var from = $("#datePick1").val();
        var to = $("#datePick2").val();
        if (from == "") {
            alert("Please pick From date");
            return false;
        }
        if (to == "") {
            alert("Please pick To date");
            return false;
        }
        $.ajax({
            type: "POST",
            url: "/QTM/BtwSearch",
            data: { From: from, To: to },
            success: function (response) {

                if (response != "" || response != null) {
                    $(".taskList").empty();
                    $(".taskList").append(response);
                    $("#datePick1").val('');
                    $("#datePick2").val('');
                }

            }
        })
    })

    $("#ParticularSearch").click(function () {

        var pdate = $("#PdatePick").val();
        if (pdate == "") {
            alert("Please pick any date");
            return false;
        }
        $.ajax({
            type: "POST",
            url: "/QTM/ParSearch",
            data: { PDate: pdate },
            success: function (response) {
                if (response != "" || response != null) {

                    $(".taskList").empty();
                    $(".taskList").append(response);
                    $("#PdatePick").val('');

                }
            }
        })
    })
</script>